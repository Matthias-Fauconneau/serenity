# -- Source image -- #

# Sources
    synthetic = '0'
    size = 64
if !synthetic: source name resolution voxelSize physicalSize = Source                                        # Concatenates image slice files in a volume
if  synthetic: source voxelSize = Synthetic                                                                  # Generates a synthetic pore network

# Denoises
    denoise = '1'
if !denoise: denoised = source
if  denoise: denoised = Median source

# Resamples
if !resample: process-resolution = resolution
if !resample: resampled = denoised
if  resample: resampled mipmap = Resample denoised resolution process-resolution             # Resamples from input resolution to process resolution

# Transposes to use an alternate cylinder axis
if !transpose     : transposed = resampled
if  transpose=='Z': transposed = resampled
if  transpose=='X': transposed = transpose
                                transpose = Transpose resampled
if  transpose=='Y': transposed = Transpose transpose

# -- Pore space -- #

# Density distribution
if !threshold-from-source: histogram-attenuation-full = Histogram resampled
if  threshold-from-source: histogram-attenuation-full = Histogram source
if !ignore-zero-workaround: histogram-attenuation = histogram-attenuation-full
if  ignore-zero-workaround: histogram-attenuation = Slice histogram-attenuation-full begin=1
histogram-attenuation-normalizeX = NormalizeX histogram-attenuation
distribution-attenuation = KernelDensityEstimation histogram-attenuation-normalizeX

# Threshold determination
   threshold =  'otsu'
if threshold == 'otsu'    : threshold otsu-parameters otsu-interclass-deviation = Otsu histogram-attenuation # Statistic recommended method
if threshold == 'gradient': threshold = difference-threshold                                                 # Use this method for backward compatibility only
                                   difference-threshold middle-threshold difference-mean = MaximumMeanGradient source distribution-attenuation-unnormalized
                                         distribution-attenuation-unnormalized = KernelDensityEstimation histogram-attenuation normalize=0
if threshold == 'middle'  : threshold = middle-threshold                            # Selects the middle value between rock and pore attenuation peaks

# Segments
rock = Binary transposed threshold mask=1
pore = Negate rock

# Unconnected pore space volume
histogram-pore = Histogram pore
histogram-pore-slice = Slice histogram-pore begin=1
volume-unconnected = Sum histogram-pore-slice

# Discards unconnected rocks
if !connect-rock: rock-connected = rock
if  connect-rock: rock-connected = FloodFill rock

# Connected pore space volume
pore-connect-rock = Negate rock-connected
histogram-pore-connect-rock = Histogram pore-connect-rock
histogram-pore-connect-rock-slice = Slice histogram-pore-connect-rock begin=1 # Excluding rock
volume-connect-rock = Sum histogram-pore-connect-rock-slice

# -- Maximum balls -- #

# Computes position of nearest background voxel
positionx  = PositionX rock-connected
positionxy = PositionY positionx
position   = PositionZ positionxy
distance   = Distance position

# Computes surface skeleton (integer medial axis)
surface-skeleton = SurfaceSkeleton position

# Discards small pores
    minimalSqRadius = '0'
if  minimalSqRadius: pruned = ThresholdClip surface-skeleton minimalSqRadius
if !minimalSqRadius: pruned = surface-skeleton

# Crops processed volume to remove boundary bias effects (before floodfill to avoid hidden connections)
crop = Crop pruned

# Floodfills skeleton
unconnected      = Binary crop threshold=1
connected-bottom = FloodFill unconnected minimalSqRadius seed=001000
connected-top    = FloodFill unconnected minimalSqRadius seed=000001
connected-both   = Intersect connected-bottom connected-top

# Discards unconnected pores
    connect-pore = '0'
if !connect-pore          : connected = unconnected
if  connect-pore=='bottom': connected = connected-bottom
if  connect-pore=='top'   : connected = connected-top
if  connect-pore=='1'     : connected = connected-both

# Masks skeleton keeping only unpruned connected voxels
    precomputedSkeleton= '0'
if !precomputedSkeleton: connected-skeleton = Mask connected crop invert=1 value=0
if  precomputedSkeleton: connected-skeleton = ZOrder source

# Rasterizes skeleton voxel as maximum balls
sphere-bins = Bin connected-skeleton connected-skeleton
maximum = Rasterize sphere-bins

# -- Pore size distribution -- #

# Histogram of maximum squared radii
histogram-squaredRadius = Slice histogram-squaredRadius-full begin=1
                                histogram-squaredRadius-full = Histogram maximum

# Square root of radii histogram (As bins are not uniformly spaced anymore, the result cannot be interpreted as a discrete probability density)
histogram-radius = SquareRootVariable histogram-squaredRadius
histogram-radius-scaled = ScaleDistribution histogram-radius process-resolution

# Properties (pore space volume, porosity, mean radius)
volume = volume-connect-pore
         volume-connect-pore = Sum histogram-squaredRadius
porosity = Div volume volume-total # Computes porosity (= pore space volume / total volume )
                      volume-total = Sum histogram-attenuation-full
mean-radius = HistogramMean histogram-radius

# Should be removed (kept for backward compatibility)
 # Normalizes histogram (for comparison with distribution-radius, compare histogram-radius with volume-distribution-radius instead)
 histogram-radius-normalized = Div histogram-radius volume-total
 histogram-radius-normalized-scaled = ScaleDistribution histogram-radius-normalized process-resolution

# Kernel density estimation from radii histogram (i.e. pore size distribution)
volume-distribution-radius = KernelDensityEstimation histogram-radius bandwidth=0.5 normalize=0
# Normalizes probability density on total volume (including background (i.e not the same as probability density normalization (area=porosity))
distribution-radius = Div volume-distribution-radius volume-total
# Normalizes probability density on pore volume (excluding background (i.e probability density normalization (area=1))
distribution-radius-normalized = Div volume-distribution-radius volume

# Scales radius (e.g to original pixel or physical resolution)
 volume-distribution-radius-scaled = ScaleDistribution volume-distribution-radius process-resolution
 distribution-radius-scaled = ScaleDistribution distribution-radius process-resolution
 distribution-radius-scaled-normalized = ScaleDistribution distribution-radius-normalized process-resolution

# -- Pores/throats partitions  -- #

# - Uniform radius threshold approximation - #

# Partitions maximum balls between throats and pores using a uniform radius threshold
median-radius = HistogramMedian histogram-radius
approximate-pores = Binary maximum median-radius
not-approximate-pores = Negate approximate-pores
maximum-mask = Binary maximum threshold=1
approximate-throats = Intersect maximum-mask not-approximate-pores # Removes background
approximate-pore-index = FloodFillSplit approximate-pores
approximate-pores = List approximate-pore-index
approximate-colored-pores = ColorizeIndex approximate-pore-index
approximate-colored-pores-throats = Add approximate-colored-pores approximate-throats
approximate-throat-index = FloodFillSplit approximate-throats
approximate-throats = List approximate-throat-index

# - Curve skeleton - #

# Computes curve skeleton (thinning)
curve-skeleton = CurveSkeleton pore-connect-rock

# Computes connectivity = coordination numbers  = number of edges/neighbours
connectivity = Connectivity curve-skeleton
connectivity-histogram-zero = Histogram connectivity
connectivity-histogram = Slice connectivity-histogram-zero begin=1 # Excluding background

# Distance restricted to curve skeleton voxels
curve-skeleton-distance = Mask curve-skeleton distance invert=1 value=0
curve-skeleton-distance-tiled = ZOrder curve-skeleton-distance

# Local extremum of distance curve
#pore-skeleton-list = LocalExtremumList curve-skeleton-distance
#throat-skeleton-list = LocalExtremumList curve-skeleton-distance minimum=1

# Writes indices (into the pores/throats list) at each pore/throat position
#pore-skeleton-untiled = RasterizeIndex pore-list voxelSize
#throat-skeleton-untiled = RasterizeIndex throat-list voxelSize

#pore-skeleton-tiled = ZOrder pore-skeleton-untiled
#pore-skeleton = pore-skeleton-tiled

#throat-skeleton-tiled = ZOrder throat-skeleton-untiled
#throat-skeleton = throat-skeleton-tiled

#skeleton = curve-skeleton-distance-tiled
skeleton-by-curve = curve-skeleton-distance-tiled

# - Cluster method - #

# Generates lists of balls for each radius from the skeleton volume
maximum-balls-lists = List maximum

# Generates a list of pores from the skeleton volume
last-root-index pore-skeleton-list throat-skeleton-list = Cluster maximum maximum-balls-lists # Inefficient method (runs on all pore space voxels)
# Rui
last-root-index0 pore-skeleton-list0 throat-skeleton-list0 = Cluster connected-skeleton maximum-balls-lists # efficient method



# Writes root index (into the family list) of each voxel
pore-skeleton = RootIndex pore-skeleton-list voxelSize
throat-skeleton = RootIndex throat-skeleton-list voxelSize
# Rui
pore-skeleton0 = RootIndex pore-skeleton-list0 voxelSize

skeleton = connected-skeleton

# - Pores/throats analysis - #

# Rasterizes skeleton voxel as maximum balls (with family index attribute)
pore-bins = Bin skeleton pore-skeleton
# Rui
pore-bins0 = Bin pore-skeleton0 pore-skeleton0
pore-index0 = RasterizeAttribute pore-bins0
throat-bins = Bin skeleton throat-skeleton
pore-index = RasterizeAttribute pore-bins
throat-index = RasterizeAttribute throat-bins

# Lists rasterized voxels for each pore
pore-list = List pore-index
throat-list = List throat-index

# Colorizes each pore in a different color
colored-pores = ColorizeIndex pore-index
colored-throats = ColorizeIndex throat-index

# Radius of each pore
pore-radius-list = RadiusList pore-list
throat-radius-list = RadiusList throat-list

# Volume of each pore
pore-volume-list = ListSize pore-list
throat-volume-list = ListSize throat-list

# Equivalent radius
pore-equivalent-radius-list = EquivalentRadius pore-volume-list

# (radius, volume) pairs of each pore
pore-radius-volume-list = Pair pore-radius-list pore-volume-list
throat-radius-volume-list = Pair throat-radius-list throat-volume-list

# Bounds pores/throats with bounding boxes
pore-box-list = Bound pore-list
throat-box-list = Bound throat-list                        

# Aspect ratio
pore-aspect-ratio-list = AspectRatio pore-box-list
throat-aspect-ratio-list = AspectRatio throat-box-list
pore-aspect-ratio-distribution = KernelDensityEstimation pore-aspect-ratio-list
throat-aspect-ratio-distribution = KernelDensityEstimation throat-aspect-ratio-list

# Nearest distance
pore-nearest-distance-list = NearestDistance pore-box-list
throat-nearest-distance-list = NearestDistance throat-box-list
pore-nearest-distance-distribution = KernelDensityEstimation pore-nearest-distance-list bandwidth=0.5
throat-nearest-distance-distribution = KernelDensityEstimation throat-nearest-distance-list bandwidth=0.5

# Rasterizes boxes in a volume
pore-box-indices = RasterizeBox pore-box-list voxelSize
throat-box-indices = RasterizeBox throat-box-list voxelSize

# Colorizes each box in a different color
pore-colored-boxes = ColorizeIndex pore-box-volume
throat-colored-boxes = ColorizeIndex throat-box-volume

# -- Export -- #

source8 = Normalize8 source
sqrt = SquareRoot maximum
sqrt-scaled = ScaleValues sqrt process-resolution
denoised-tiled = ZOrder denoised
denoised-connected = Mask maximum-mask denoised-tiled value=threshold
flood = Add pore maximum-mask
histogram-flood = Histogram flood
not-flood = Negate maximum-mask
pore-not-flood = Intersect pore not-flood
pore-not-flood8 = Normalize8 pore-not-flood

# Exports to PNG (normalized and gamma-compressed for visualization)
png-source = ToPNG source
# Rui
# Still want to export png

# - BMP - # (stores original (unnormalized and linear) values for interoperation, quantize 16bit values to 8bit when necessary) [deprecated: use TIFF]
bmp-source = ToBMP source
bmp-denoised = ToBMP denoised
bmp-resampled = ToBMP resampled
bmp-rock = ToBMP rock

bmp-distance = ToBMP distance
bmp-skeleton = ToBMP surface-skeleton
bmp-connected = ToBMP connected
bmp-maximum = ToBMP maximum
bmp-denoised-connected = ToBMP denoised-connected
bmp-pore-not-flood = ToBMP pore-not-flood8
maximum-mask8 = Normalize8 maximum-mask
bmp-maximum-mask = ToBMP maximum-mask8

# - 16bit TIFF - # (Stores original (unnormalized and linear) values for interoperation)
tiff-denoised = ToTIFF denoised
tiff-denoised-connected = ToTIFF denoised-connected

# - CDL - #
cdl-flood = ToCDL flood
cdl-maximum = ToCDL sqrt-scaled
cdl-pore-index = ToCDL pore-index
cdl-pore-index0 = ToCDL pore-index0
cdl = cdl-maximum
# Rui
cdl-skeleton = ToCDL surface-skeleton
cdl-skeleton-by-curve = ToCDL skeleton-by-curve
cdl-connectivity = ToCDL connectivity
cdl-pore-skeleton = ToCDL pore-skeleton
cdl-pore-skeleton0 = ToCDL pore-skeleton0


# - ASCII - #
ascii-flood = ToASCII flood
ascii-maximum = ToASCII sqrt-scaled
ascii-colored-pores = ToASCII colored-pores
ascii = ascii-maximum

# - Additional options - #
### define syntheic size ###
# size=64
### define storage ###
# storageFolder=/dev/shm/rock 
### minimum radius used in cluster ###
# minimum=0
