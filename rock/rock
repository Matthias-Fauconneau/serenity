# Rock process definition

# Concatenates image slice files in a volume
# \note Parses resolution from input folder name as "name-resolution"
synthetic = '0'
if !synthetic: source name resolution voxelSize physicalSize = Source
# Generates a synthetic pore network for debugging and validation
if synthetic: source voxelSize = Synthetic

# Denoises
denoise = 'median'
if !denoise: denoised = source
if denoise == 'median': denoised = median
 median = Median source

# Resamples
if !resample: process-resolution = resolution # Forwards original resolution
if !resample: resampled = denoised # Forwards original volume
if resample: resampled mipmap = Resample denoised resolution process-resolution # Resamples from input resolution to process resolution

# Density distribution
if !threshold-from-source: histogram-radiodensity = Histogram resampled
if threshold-from-source: histogram-radiodensity = Histogram source
histogram-radiodensity-normalizeX = NormalizeX histogram-radiodensity
distribution-radiodensity = KernelDensityEstimation histogram-radiodensity-normalizeX

# Debug
histogram-radiodensity-normalizeY = NormalizeAreaY histogram-radiodensity
distribution-radiodensity-unnormalized = KernelDensityEstimation histogram-radiodensity normalize=0
# Compatibility
histogram-density = histogram-radiodensity
histogram-density-normalized = histogram-radiodensity-normalizeY
distribution-density = distribution-radiodensity-unnormalized

# Threshold determination
threshold = 'otsu'
if threshold == 'otsu': threshold otsu-parameters otsu-interclass-deviation = Otsu histogram-radiodensity # Recommended robust statistic method
otsu-interclass-deviation-normalized = NormalizeAreaXY otsu-interclass-deviation
if threshold == 'gradient': threshold gradient-mean = MaximumMeanGradient source distribution-radiodensity-unnormalized # Use this method for backward compatibility only
if threshold == 'lorentz': threshold lorentz-parameters lorentz-rock lorentz-notrock lorentz-pore lorentz-notpore = LorentzianMixtureModel distribution-radiodensity-unnormalized # Explicit model

# Transposes to use an alternate cylinder axis
transpose = Transpose resampled
if transpose=='X': transposed = transpose
if transpose=='Y': transposed = Transpose transpose
if transpose=='Z': transposed = resampled
if !transpose: transposed = resampled

# Segments
rock = Binary transposed threshold box=source.box mask=1 # if !box: Also clips to cylinder before distance field evaluation
colored = Colorize transposed threshold # For visualization
background = Maximum transposed threshold # For visualization
foreground = Minimum transposed threshold # For visualization

# Original volume
pore = Negate rock
histogram-pore = Histogram pore
histogram-pore-slice = Slice histogram-pore begin=1 # Excluding rock
volume-unconnected = Sum histogram-pore-slice

# Discards unconnected rocks
if !connect-rock: rock-connected = rock # Forwards unconnected skeleton
if connect-rock: rock-connected = FloodFill rock # Flood fills rock

# Volume after connect-rock
pore-connect-rock = Negate rock-connected
histogram-pore-connect-rock = Histogram pore
histogram-pore-connect-rock-slice = Slice histogram-pore-connect-rock begin=1 # Excluding rock
volume-connect-rock = Sum histogram-pore-connect-rock-slice

# Computes position of nearest background voxel
positionx = PositionX rock-connected
positionxy = PositionY positionx
position = PositionZ positionxy
distance = Distance position

# Computes skeleton (medial axis)
skeleton = Skeleton position
skeleton-tiled = ZOrder skeleton #FIXME: output tiled position in positionZ

# Discards small pores
minimalSqRadius = '0'
if minimalSqRadius: pruned = ThresholdClip skeleton-tiled minimalSqRadius
if !minimalSqRadius: pruned = skeleton-tiled

# Crops processed volume to remove boundary bias effects (before floodfill to avoid hidden connections)
#if crop.cylinder: crop = Crop pruned
#if !crop.cylinder: crop = pruned #FIXME: if !crop.cylinder and !crop.box
crop = Crop pruned #FIXME: defaults to cylinder even with source.box (requires crop.box)

# Floodfills skeleton
unconnected = Binary crop threshold=1 box=crop.box
connected-bottom = FloodFill unconnected minimalSqRadius seed=001000 # Keeps pore space connected to bottom face
connected-top = FloodFill unconnected minimalSqRadius seed=000001 # Keeps pore space connected to top face
connected-both = Intersect connected-bottom connected-top # Keeps pore space connected to both face

# Discards unconnected pores
connect-pore = ''
if !connect-pore: connected = unconnected # Forwards unconnected skeleton
if connect-pore=='bottom': connected = connected-bottom
if connect-pore=='top': connected = connected-top
if connect-pore=='1': connected = connected-both

# Masks skeleton keeping only unpruned connected voxels
connected-skeleton = Mask connected crop invert=1 value=0

# Computes histogram of maximum squared radii of skeleton voxels
histogram-skeleton-bg = Histogram connected-skeleton
histogram-skeleton = Slice histogram begin=1 # Excluding background

# Generates lists of balls for each radius from the skeleton volume
maximum-balls-lists = List connected-skeleton

# Generates a list of pores from the skeleton volume
last-root-index pores throats = Cluster connected-skeleton maximum-balls-lists

# Bounds pores/throats with bounding boxes
pore-bounding-boxes = Bound pores
throat-bounding-boxes = Bound throats

pore-aspect-ratios = AspectRatio pore-bounding-boxes
throat-aspect-ratios = AspectRatio throat-bounding-boxes
pore-aspect-ratio = KernelDensityEstimation pore-aspect-ratios
throat-aspect-ratio = KernelDensityEstimation throat-aspect-ratios
pore-nearest-distances = NearestDistance pore-bounding-boxes
throat-nearest-distances = NearestDistance throat-bounding-boxes
pore-nearest-distance = KernelDensityEstimation pore-nearest-distances bandwidth=0.5
throat-nearest-distance = KernelDensityEstimation throat-nearest-distances bandwidth=0.5

# Rasterizes boxes in a volume
pore-box-volume = RasterizeBox pore-bounding-boxes voxelSize
throat-box-volume = RasterizeBox throat-bounding-boxes voxelSize

# Colorizes each box in a different color
pore-colored-boxes = ColorizeIndex pore-box-volume
throat-colored-boxes = ColorizeIndex throat-box-volume

# Writes root index (into the family list) of each voxel
pore-skeleton = RootIndex pores voxelSize
throat-skeleton = RootIndex throats voxelSize

# Rasterizes skeleton voxel as maximum spheres (with family index attribute)
pore-bins = Bin connected-skeleton pore-skeleton
throat-bins = Bin connected-skeleton throat-skeleton
pore-index = RasterizeAttribute pore-bins
throat-index = RasterizeAttribute throat-bins

# Colorizes each pore in a different color
colored-pores = ColorizeIndex pore-index
colored-throats = ColorizeIndex throat-index

# Rasterizes skeleton voxel as maximum spheres
sphere-bins = Bin connected-skeleton
maximum = Rasterize sphere-bins

# Computes histogram of maximum squared radii
histogram = Histogram maximum # Including rock
histogram-squaredRadius = Slice histogram begin=1 # Excluding rock
# Square roots radii histogram (As bins are not uniformly spaced anymore, the result cannot be interpreted as a discrete probability density)
histogram-radius = SquareRootVariable histogram-squaredRadius
histogram-radius-scaled = ScaleDistribution histogram-radius process-resolution

# Computes notable properties from histogram (pore space volume, total volume, porosity and mean radius)
volume-connect-pore = Sum histogram-squaredRadius
volume = volume-connect-pore
volume-total = Sum histogram
porosity = Div volume volume-total # Computes porosity (= pore space volume / total volume )
mean-radius = HistogramMean histogram-radius

# Should be removed (kept for backward compatibility)
 histogram-radius-normalized = Div histogram-radius volume-total # Normalizes histogram (for comparison with distribution-radius, compare histogram-radius with volume-distribution-radius instead)
 histogram-radius-normalized-scaled = ScaleDistribution histogram-radius-normalized process-resolution

# Computes kernel density estimation from radii histogram (i.e. pore size distribution)
volume-distribution-radius = KernelDensityEstimation histogram-radius bandwidth=0.5 normalize=0
# Normalizes probability density on total volume (including background (i.e not the same as probability density normalization (area=porosity))
distribution-radius = Div volume-distribution-radius volume-total
# Normalizes probability density on pore volume (excluding background (i.e probability density normalization (area=1))
distribution-radius-normalized = Div volume-distribution-radius volume
# Scales radius (e.g to original pixel or physical resolution)
 volume-distribution-radius-scaled = ScaleDistribution volume-distribution-radius process-resolution
 distribution-radius-scaled = ScaleDistribution distribution-radius process-resolution
 distribution-radius-scaled-normalized = ScaleDistribution distribution-radius-normalized process-resolution

# Export
 source8 = Normalize8 source
 sqrt = SquareRoot maximum
 sqrt-scaled = ScaleValues sqrt process-resolution
 denoised-tiled = ZOrder denoised
 maximum-mask = Binary maximum threshold=1 box=crop.box
 denoised-connected = Mask maximum-mask denoised-tiled
 flood = Add pore maximum-mask
 histogram-flood = Histogram flood
 not-flood = Negate maximum-mask
 pore-not-flood = Intersect pore not-flood
 # Exports to PNG (normalized and gamma-compressed for visualization)
  png-source = ToPNG source
  png-denoised = ToPNG denoised
  png-colored = ToPNG colored
  png-background = ToPNG background
  png-position = ToPNG position
  png-distance = ToPNG distance invert=1
  png-skeleton = ToPNG skeleton invert=1
  png-unconnected = ToPNG unconnected invert=1 binary=1
  png-pruned = ToPNG pruned invert=1
  png-connected = ToPNG connected invert=1 binary=1
  png-maximum = ToPNG maximum invert=1
  png-flood = ToPNG flood
  png-denoised-connected = ToPNG denoised-connected
  png-colored-families = ToPNG colored-families
  png-colored-boxes = ToPNG colored-boxes
# Exports to BMP (Stores original (unnormalized and linear) values for interoperation, quantize 16bit values to 8bit when necessary) [deprecated: use TIFF]
  bmp-source = ToBMP source
  bmp-denoised = ToBMP denoised
  bmp-distance = ToBMP distance
  bmp-skeleton = ToBMP skeleton
  bmp-maximum = ToBMP maximum
  bmp-denoised-connected = ToBMP denoised-connected
  pore-not-flood8 = Normalize8 pore-not-flood
  bmp-pore-not-flood = ToBMP pore-not-flood8
  maximum-mask8 = Normalize8 maximum-mask
  bmp-maximum-mask = ToBMP maximum-mask8
 # Exports to 16bit TIFF (Stores original (unnormalized and linear) values for interoperation)
  tiff-denoised = ToTIFF denoised
  tiff-denoised-connected = ToTIFF denoised-connected
 # Exports to CDL
  cdl-flood = ToCDL flood
  cdl-maximum = ToCDL sqrt-scaled
  cdl-colored-families = ToCDL colored-families
  cdl = cdl-maximum
 # Exports to ASCII
  ascii-flood = ToASCII flood
  ascii-maximum = ToASCII sqrt-scaled
  ascii-colored-families = ToASCII colored-families
  ascii = ascii-maximum

# Tools
 ε(R) ε(R|r<median) ε(R|r>median) PSD(R) PSD(octant|R:first) PSD(octant|R:inflection) PSD(octant|R:last) representative-radius = REV
 critical-radius unconnected(λ) connected(λ) = Prune
 P(Sw) = Prune connect-pore=top
 slices plots summary = Summary
 compare = Compare
 sweep = Sweep
